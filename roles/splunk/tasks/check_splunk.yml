---
- name: Check if Splunk is installed
  stat:
    path: "{{ splunk_home }}/bin/splunk"
    follow: true
  register: splunkd_path
  become: true

  # If installed, check version, if version is good, don't install but continue
- name: Install Splunk if not installed
  include_tasks: install_splunk.yml
  when: splunkd_path.stat.exists == false

  # Configure the license for both fresh and old installs
- name: Configure license
  include_tasks: configure_license.yml

- name: Execute this block only if splunk is already installed
  block:

    - name: Run splunk version command to check currently installed version
      include_tasks: check_splunk_version.yml

    - name: "Checkpoint: Version" ##########################
      debug:
        msg: "The value of splunk_version is: {{ splunk_version }} and the current_version is: {{ current_version.stdout }}"

    - name: Execute this block only if the current version does not match the expected version
      block:
        - name: "Checkpoint: Package"
          debug:
            msg: "We will download the latest release from {{ splunk_package_url }}"

        - name: Check if Splunk needs to be stopped if we are not at the expected version
          include_tasks: check_splunk_status.yml

        - name: Stop Splunk if not at expected version and splunk is currently running
          include_tasks: splunk_stop.yml
          when: splunk_status.rc == 0

        - name: Upgrade Splunk if not at expected version
          include_tasks: upgrade_splunk.yml
      # Conditional for version mismatch block
      when: current_version.stdout != splunk_version
  # Conditional for this block
  when: splunkd_path.stat.exists == true
