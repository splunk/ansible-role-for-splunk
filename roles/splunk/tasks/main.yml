---
- name: Reset value of start_splunk_handler_fired
  tags: always
  set_fact:
    start_splunk_handler_fired: false
  changed_when: false

- block:
    - name: Configure vars for full package
      tags: always
      set_fact:
        splunk_home: "{{ splunk_install_path }}/splunk"
        splunk_package_url: "{{ splunk_package_url_full }}"
        splunk_product: "Splunk"
        splunk_install_type: full
      changed_when: false

    - name: Check if current boot-start configuration is systemd
      stat:
        path: /etc/systemd/system/Splunkd.service
        follow: true
      register: systemd_boot_full
      become: true
  when: "'full' in group_names"

- block:
    - name: Configure vars for uf package
      tags: always
      set_fact:
        splunk_home: "{{ splunk_install_path }}/splunkforwarder"
        splunk_package_url: "{{ splunk_package_url_uf }}"
        splunk_product: "Splunk Universal Forwarder"
        splunk_install_type: uf
      changed_when: false

    - name: Check if current boot-start configuration is systemd
      stat:
        path: /etc/systemd/system/SplunkForwarder.service
        follow: true
      register: systemd_boot_uf
      become: true
  when: "'uf' in group_names"

- name: Set systemd_boot var to true if systemd is being used for splunk
  set_fact:
    systemd_boot: true
  when: (systemd_boot_uf.stat is defined and systemd_boot_uf.stat.exists) or (systemd_boot_full.stat is defined and systemd_boot_full.stat.exists)

- name: Check if current boot-start method is init.d
  stat:
    path: /etc/init.d/splunk
    follow: true
  register: initd_boot
  become: true

- name: Check if Splunk is installed when no boot-start config has been found
  stat:
    path: "{{ splunk_home }}/bin/splunk"
    follow: true
  register: splunkd_found
  become: true

- name: Fail the play if the currently configured boot-start method does match the expected state or boot-start is not enabled
  fail:
    msg:
      - "ERROR: Misconfiguration detected! Unable to proceed as handlers will fail in the play later."
      - "Either splunk boot-start is not enabled on this host, or its current boot-start method does not matched the expected value of splunk_use_initd."
      - "To correct this: Either run configure_splunk_boot.yml or update the value of splunk_use_initd in your group_vars."
  when:
    - splunkd_found.stat.exists
    - (systemd_boot and splunk_use_initd) or (initd_boot.stat.exists and not splunk_use_initd) or (not systemd_boot and not initd_boot.stat.exists)
    - not deployment_task == "configure_splunk_boot.yml"

- name: Configure var for splunk init.d service handler
  tags: always
  set_fact:
    splunk_service: splunk
  when: splunk_use_initd

- name: Configure var for splunk systemd service handler
  tags: always
  set_fact:
    splunk_service: Splunkd
  when:
    - not splunk_use_initd
    - "'full' in group_names"

- name: Configure var for splunkforwarder systemd service handler
  tags: always
  set_fact:
    splunk_service: SplunkForwarder
  when:
    - not splunk_use_initd
    - "'uf' in group_names"

- name: Send Slack messages
  include_tasks: slack_messenger.yml
  tags: always
  when:
    - slack_token != 'undefined'
    - slack_channel != 'undefined'

# Always set the deployment_task var to your desired task in the playbook! e.g. check_splunk.yml (install|upgrade) or configure_apps.yml  (app/addon install|upgrade)
- name: Include the specified task file
  tags: always
  include_tasks: "{{ deployment_task }}"
