---
- name: include distribution vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: Include prerequisites
  include_tasks: prereqs.yml

- name: Reset value of start_splunk_handler_fired and configure_boot_start
  tags: always
  set_fact:
    start_splunk_handler_fired: false
    configure_boot_start: False
  changed_when: false

- name: Set boot-start method to systemd
  set_fact:
    desired_start_method: "systemd"
  when:
    - splunk_use_systemd
    - not splunk_use_initd

- name: Set boot-start method to initd
  set_fact:
    desired_start_method: "initd"
  when:
    - splunk_use_initd

- block:
    - name: Configure vars for full package
      tags: always
      set_fact:
        splunk_home: "{{ splunk_install_path }}/splunk"
        splunk_package_url: "{{ splunk_package_url_full }}"
        splunk_product: "Splunk"
        splunk_install_type: full
        systemd_unit: "{{ systemd_unit_full }}"
      changed_when: false

    - name: Configure var for splunk systemd service handler
      tags: always
      set_fact:
        splunk_service: "{{ systemd_unit }}"
      when:
        -  desired_start_method == "systemd"
  when: ('full' in group_names or splunk_install_type == "full")

- block:
    - name: Configure vars for uf package
      tags: always
      set_fact:
        splunk_home: "{{ splunk_install_path }}/splunkforwarder"
        splunk_package_url: "{{ splunk_package_url_uf }}"
        splunk_product: "Splunk Universal Forwarder"
        splunk_install_type: uf
        systemd_unit: "{{ systemd_unit_uf }}"
      changed_when: false

    - name: Setting least priviledged mode
      set_fact:
        least_privileged: true
      when: >
        (splunk_package_version is version(9.0, '>=') and splunk_install_type == "uf") or
        splunk_install_type == "full" and splunk_nix_user == "root"

    - name: Configure var for splunkforwarder systemd service handler
      tags: always
      set_fact:
        splunk_service: "{{ systemd_unit }}"
      when:
        - desired_start_method == "systemd"
  when: ('uf' in group_names or splunk_install_type == "uf")

- name: Configure var for splunk init.d service handler
  set_fact:
    splunk_service: splunk
  when: desired_start_method == "initd"

- name: Check if Splunk is installed
  stat:
    path: "{{ splunk_home }}/bin/splunk"
    follow: true
  register: splunkd_found
  become: true

- name: Check active boot-start configuration
  when: splunkd_found.stat.exists
  block:
    - name: Check if active boot-start configuration is systemd
      stat:
        path: "/etc/systemd/system/{{ splunk_service }}.service"
        follow: true
      register: systemd_boot_file
      become: true

    - name: Set current_start_method var to systemd if systemd is being used for splunk
      set_fact:
        current_start_method: "systemd"
      when: systemd_boot_file.stat.exists

    - name: Check if active boot-start method is init.d
      stat:
        path: /etc/init.d/splunk
        follow: true
      register: initd_boot_file
      become: true

    - name: Set current_start_method to initd if initd is being used for splunk
      set_fact:
        current_start_method: "initd"
      when: initd_boot_file.stat.exists

    - name: set current_start_method to disabled if boot-start is disabled
      set_fact:
        current_start_method: "disabled"
      when: current_start_method is not defined

- name: Set boot-start misconfigured var
  set_fact:
    configure_boot_start: true
  when: >
    not splunkd_found.stat.exists or
    current_start_method != desired_start_method or
    current_start_method == "disabled"

- name: Fail the play if the currently configured boot-start method does match the expected state or boot-start is not enabled
  fail:
    msg:
      - "ERROR: Misconfiguration detected! Unable to proceed as handlers will fail in the play later."
      - "Either splunk boot-start is not enabled on this host, or its current boot-start method does not matched the expected value of splunk_use_initd/splunk_use_systemd."
      - "To correct this: Either run configure_splunk_boot.yml or update the value of splunk_use_initd/splunk_use_systemd in your group_vars."
  when:
    - splunkd_found.stat.exists
    - configure_boot_start == True
    - not deployment_task == "configure_splunk_boot.yml"

- name: Send Slack messages
  include_tasks: slack_messenger.yml
  tags: always
  when:
    - slack_token != 'undefined'
    - slack_channel != 'undefined'

# Always set the deployment_task var to your desired task in the playbook! e.g. check_splunk.yml (install|upgrade) or configure_apps.yml  (app/addon install|upgrade)
- name: Include the specified task file
  tags: always
  include_tasks: "{{ deployment_task }}"
